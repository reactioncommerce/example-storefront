# This CircleCI configuration uses workflows to fan-out to multiple jobs.  The
# workflow is Dockerized. The first job builds the Docker image which is used
# in all future steps.
#
#  Assumes that the Docker image is published to Docker Hub.
version: 2.1

orbs:
  webhook: eddiewebb/webhook@volatile

# The following stanza defines a map named defaults with a variable that may be
# inserted using the YAML merge (<<: *) key later in the file to save some
# typing. See http://yaml.org/type/merge.html for details.
defaults: &defaults
  environment:
    - CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.9.1"
    - DOCKER_REPOSITORY: "reactioncommerce/example-storefront"
    - DOCKER_NAME: "example-storefront"
    - GITOPS_PR_WEBHOOK: "https://w603b5hwp1.execute-api.us-east-1.amazonaws.com/dev/pullrequests"
    - GLOBAL_CACHE_VERSION: “v3”
  docker:
    - image: circleci/node:14-stretch

jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-storefront-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-stoprefront-v3-node-modules-{{ .Branch }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: reaction-storefront-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: reaction-storefront-v3-node-modules-{{ .Branch }}
          paths:
            - node_modules

  dockerfile-lint:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 19.03.13
      - run:
          name: Lint Dockerfiles
          command: ${CI_SCRIPTS} lint-dockerfiles

  eslint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-storefront-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-storefront-v3-node-modules-{{ .Branch }}
      - run:
          name: Lint JavaScript
          command: npm run lint

  test-unit:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-storefront-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-storefront-v3-node-modules-{{ .Branch }}
      - run:
          name: Run Unit Tests
          command: npm run test:ci

  release:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-storefront-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-storefront-v3-node-modules-{{ .Branch }}
      - run:
          name: Push the latest version to npm
          command: npm run semantic-release

  docker-build-push:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 19.03.13
      - run:
          name: Build and push production Docker image
          command: |
            VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c2-100)
            docker build -t ${DOCKER_REPOSITORY}:${VERSION} .
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push ${DOCKER_REPOSITORY}:${VERSION}
      - webhook/notify:
          endpoint: "${GITOPS_PR_WEBHOOK}"

  create-gitops-pull-request:
    <<: *defaults
    steps:
      - run:
          name: Clone reaction-gitops repo and create PR
          command: |
            ${CI_SCRIPTS} automate-gitops-pull-request
workflows:
  version: 2
  build_and_test:
    jobs:
      - install-dependencies
      - dockerfile-lint:
          requires:
            - install-dependencies
      - eslint:
          requires:
            - install-dependencies
      - test-unit:
          requires:
            - install-dependencies
      - release:
          context: reaction-publish-semantic-release
          filters:
            branches:
              only:
                - trunk
          requires:
            - dockerfile-lint
            - eslint
            - test-unit
      - docker-build-push:
          context: reaction-publish-docker
          requires:
            - release
