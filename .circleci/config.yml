# This CircleCI configuration uses workflows to fan-out to multiple jobs.  The
# workflow is Dockerized. The first job builds the Docker image which is used
# in all future steps.
#
#  Assumes that the Docker image is published to Docker Hub.
version: 2

# The following stanza defines a map named defaults with a variable that may be
# inserted using the YAML merge (<<: *) key later in the file to save some
# typing. See http://yaml.org/type/merge.html for details.
defaults: &defaults
  environment:
    CI_SCRIPTS: 'npx --quiet --package @reactioncommerce/ci-scripts@1.6.2'
    DOCKER_REPOSITORY: "reactioncommerce/example-storefront"
    DOCKER_NAMESPACE: "reactioncommerce"
    DOCKER_NAME: "example-storefront"
    GLOBAL_CACHE_VERSION: "v3"
    KUSTOMIZE_VERSION: "3.2.1"
    HUB_VERSION: "2.12.8"
    GH_USERNAME: "rc-circleci"
    GH_EMAIL: "circleci@reactioncommerce.com"
    REACTION_GITOPS_REVIEWERS: "griggheo"
  docker:
    - image: circleci/node:12.11.1-stretch

jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Install NPM dependencies
          command: yarn install --production=false --frozen-lockfile --non-interactive
      - save_cache:
          key: reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - save_cache:
          key: reaction-v3-node-modules-{{ .Branch }}
          paths:
            - node_modules

  dockerfile-lint:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Lint Dockerfiles
          command: ${CI_SCRIPTS} lint-dockerfiles

  eslint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Lint JavaScript
          command: yarn run lint

  test-unit:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - reaction-v3-node-modules-{{ .Branch }}
      - run:
          name: Run Unit Tests
          command: yarn run test:ci

  docker-build-push:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push production Docker image
          command: ${CI_SCRIPTS} docker-build-tag-push . ${DOCKER_REPOSITORY}

  create-gitops-pull-request:
    <<: *defaults
    steps:
      - run:
          name: Clone reaction-gitops repo and create PR
          command: |
            # Download kustomize
            cd /tmp
            wget https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_kustomize.v${KUSTOMIZE_VERSION}_linux_amd64
            sudo mv kustomize_kustomize.v${KUSTOMIZE_VERSION}_linux_amd64 /usr/local/bin/kustomize
            sudo chmod +x /usr/local/bin/kustomize
            # Download hub
            wget https://github.com/github/hub/releases/download/v${HUB_VERSION}/hub-linux-amd64-${HUB_VERSION}.tgz
            tar xfz hub-linux-amd64-${HUB_VERSION}.tgz
            sudo mv hub-linux-amd64-${HUB_VERSION}/bin/hub /usr/local/bin/hub
            sudo chmod +x /usr/local/bin/hub
            # Clone reaction-gitops repo and configure username and email for signing off commits
            export GITHUB_TOKEN="${REACTION_GITOPS_GH_TOKEN}"
            /usr/local/bin/hub clone https://${GITHUB_TOKEN}@github.com/reactioncommerce/reaction-gitops.git
            cd reaction-gitops
            /usr/local/bin/hub config user.name "${GH_USERNAME}"
            /usr/local/bin/hub config user.email "${GH_EMAIL}"
            cd kustomize/reaction-storefront/overlays/staging
            # Create new branch
            /usr/local/bin/hub checkout -b update-image-reaction-storefront-${CIRCLE_SHA1}
            # Modify image tag in kustomization.yaml by calling 'kustomize edit set image'
            /usr/local/bin/kustomize edit set image docker.io/${DOCKER_REPOSITORY}:${CIRCLE_SHA1}
            /usr/local/bin/hub add kustomization.yaml
            # Commit with sign-off
            /usr/local/bin/hub commit -s -m "changed reaction-storefront image tag to ${CIRCLE_SHA1}"
            # Push branch to origin
            /usr/local/bin/hub push --set-upstream origin update-image-reaction-storefront-${CIRCLE_SHA1}
            # Create PR
            /usr/local/bin/hub pull-request --no-edit -r ${REACTION_GITOPS_REVIEWERS}

workflows:
  version: 2
  build_and_test:
    jobs:
      - install-dependencies
      - dockerfile-lint:
          requires:
            - install-dependencies
      - eslint:
          requires:
            - install-dependencies
      - test-unit:
          requires:
            - install-dependencies
      - docker-build-push:
          context: reaction-publish-docker
          requires:
            - dockerfile-lint
            - eslint
            - test-unit
      - create-gitops-pull-request:
          requires:
            - docker-build-push
          filters:
            branches:
              only: /^master$/
